{"version":3,"sources":["components/mainMenu.js","components/mobileMenu.js","components/images/northgard_icon.png","components/header.js","components/images/Wolf_round.png","components/images/Bear_78x78.png","components/images/Boar_78x78.png","components/images/Goat_78x78.png","components/images/Raven_78x78.png","components/images/Stag_78x78.png","components/clan-pages/wolf.js","components/clan-pages/bear.js","components/clan-pages/boar.js","components/clan-pages/goat.js","components/clan-pages/raven.js","components/clan-pages/stag.js","components/clansMenu.js","components/faq.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["MainMenu","id","orientation","variant","align","mt","mb","p","to","MobileMenu","as","Button","rightIcon","ChevronDown","mx","my","MainHeader","direction","alignItems","boxSize","src","mainIcon","alt","size","WolfClan","maxW","BearClan","BoarClan","GoatClan","RavenClan","StagClan","TestMenu","state","items","title","image","Wolf","page","Bear","Boar","Goat","Raven","Stag","this","isFitted","w","map","item","fontSize","React","Component","Faq","handleClick","bind","filter","li","a","i","document","getElementById","value","toUpperCase","getElementsByTagName","length","textContent","innerText","indexOf","style","display","placeholder","onKeyUp","href","App","basename","theme","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8828aae8.chunk.js","sourcesContent":["import React from 'react';\nimport { Tabs, TabList, Tab } from '@chakra-ui/react';\nimport { Box, Menu, MenuItem, MenuList, Button, ChevronDownIcon, MenuButton } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\n\nfunction MainMenu() {\n  return (\n   \n      <Tabs\n        id=\"mainMenu\"\n        orientation=\"horizontal\"\n        variant=\"soft-rounded\"\n        align=\"left\"\n        mt={1}\n        mb={1}\n      >\n        <TabList p={0}>\n          <Tab p={0}>\n            <Link id=\"menuLink\" to=\"/\">\n              Home\n            </Link>\n          </Tab>\n          <Tab p={0}>\n            <Link id=\"menuLink\" to=\"/clans\">\n              Clans\n            </Link>\n          </Tab>\n          <Tab p={0}>\n            <Link id=\"menuLink\" to=\"/resources\">\n              Resources\n            </Link>\n          </Tab>\n          <Tab p={0}>\n            <Link id=\"menuLink\" to=\"/victory\">\n              Victory\n            </Link>\n          </Tab>\n          <Tab p={0}>\n            <Link id=\"menuLink\" to=\"/faq\">\n              FAQ\n            </Link>\n          </Tab>\n        </TabList>\n      </Tabs>\n\n   \n  );\n}\n\nexport default MainMenu;\n\n","import React from 'react';\nimport {\n  Menu,\n  MenuItem,\n  MenuList,\n  Button,\n  MenuButton,\n} from '@chakra-ui/react';\nimport { ChevronDownIcon } from '@chakra-ui/icons'\nimport { Link } from 'react-router-dom';\n\nconst MobileMenu = () => {\n  return (\n    <Menu id=\"mobileMenu\">\n      <MenuButton as={Button} rightIcon={<ChevronDownIcon />} mx={1} my={1}>\n        Menu\n      </MenuButton>\n      <MenuList>\n        <MenuItem>\n          <Link id=\"menuLink\" to=\"/\">\n            Home\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link id=\"menuLink\" to=\"/clans\">\n            Clans\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link id=\"menuLink\" to=\"/resources\">\n            Resources\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link id=\"menuLink\" to=\"/victory\">\n            Victory\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link id=\"menuLink\" to=\"/faq\">\n            FAQ\n          </Link>\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default MobileMenu;\n","export default __webpack_public_path__ + \"static/media/northgard_icon.8486b735.png\";","import { Box, Stack, Heading, Image } from '@chakra-ui/react';\nimport mainIcon from './images/northgard_icon.png';\n\nconst MainHeader = () => {\n  return (\n    <div id=\"mainHeader\">\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box>\n          <Image boxSize=\"50px\" src={mainIcon} alt=\"Northgard\" />\n        </Box>\n        <Box>\n          <Heading size=\"lg\">Northgard </Heading>\n        </Box>\n      </Stack>\n    </div>\n  );\n};\n\nexport default MainHeader;\n","export default __webpack_public_path__ + \"static/media/Wolf_round.b9b27e50.png\";","export default __webpack_public_path__ + \"static/media/Bear_78x78.a8816f69.png\";","export default __webpack_public_path__ + \"static/media/Boar_78x78.82486896.png\";","export default __webpack_public_path__ + \"static/media/Goat_78x78.d89c6e1a.png\";","export default __webpack_public_path__ + \"static/media/Raven_78x78.ff306cb5.png\";","export default __webpack_public_path__ + \"static/media/Stag_78x78.72ef6184.png\";","import {\n  Divider,\n  ListItem,\n  Box,\n  UnorderedList,\n  Text,\n} from '@chakra-ui/react';\nimport { Heading } from '@chakra-ui/react';\n\nconst WolfClan = () => {\n  return (\n    <Box maxW=\"400px\">\n      <Heading mb={3}>Clan of the Wolf</Heading>\n      <Text>\n        The Clan of the Wolf. Aggressive, protective of their freedom and more\n        than a little reckless. They are well prepared to face the dangers of\n        Northgard and use their combined might and mobility to leave little\n        chance to all but the most resilient.\n      </Text>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Starting Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>\n          Killing Wolves and Brown Bears provide Food (15 for wolves, 120 for\n          bears)\n        </ListItem>\n        <ListItem>\n          Military units eat 30% less Food and provide Happiness\n        </ListItem>\n      </UnorderedList>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Fame Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>\n          200 Fame (Dominion): Your Berserker can colonize for free (with a 12\n          month cooldown)\n        </ListItem>\n        <ListItem>\n          500 Fame (Assault): Your military units gain 15% attack bonus when\n          fighting outside your territory. Dominion cooldown is reduced by 50%.\n        </ListItem>\n      </UnorderedList>\n    </Box>\n  );\n};\n\nexport default WolfClan;\n","import { Divider, ListItem, Box, UnorderedList, Text } from '@chakra-ui/react';\nimport { Heading } from '@chakra-ui/react';\n\nconst BearClan = () => {\n  return (\n    <Box maxW=\"400px\">\n      <Heading mb={3}>Clan of the Bear</Heading>\n      <Text>\n        Stalwart protector of the land, the clan of Bjarki is home to the most\n        resilient warriors. Hailing from the northern reaches of the realm, they\n        are also very well suited to survive the harsh winters of Northgard.\n      </Text>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Starting Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>Food and Wood penalties are reduced by 30%</ListItem>\n        <ListItem>\n          Instead of having reduced power, your military units get 10%\n          resistance bonus during Winter\n        </ListItem>\n        <ListItem>\n          Can summon Kaija, the Armored Bear at the Training Camp for 40 Food\n          and 40 Fame (Cannot enter enemy territory)\n        </ListItem>\n      </UnorderedList>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Fame Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>\n          200 Fame (Kindred Spirit): Having Kaija or a Shield Maiden in an area,\n          increases local production by 10%\n        </ListItem>\n        <ListItem>\n          500 Fame (The Bear Awakens): You gain +3 Fame per enemy unit killed in\n          an area with the Shield Maiden. Your Military units gain 1% power per\n          100 Fame.\n        </ListItem>\n      </UnorderedList>\n    </Box>\n  );\n};\n\nexport default BearClan;\n","import { Divider, ListItem, Box, UnorderedList, Text } from '@chakra-ui/react';\nimport { Heading } from '@chakra-ui/react';\n\nconst BoarClan = () => {\n  return (\n    <Box maxW=\"400px\">\n      <Heading mb={3}>Clan of the Boar</Heading>\n      <Text>\n        The Clan of the Boar. A reclusive clan once forgotten by their brethren\n        but recently rediscovered, the Clan of the Boar is both mystical and\n        untamed. Their understanding of the world is unmatched, as are their\n        boorish and primitive ways.{' '}\n      </Text>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Starting Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>\n          The Mender's Hut replaces the Healer's Hut. Mender produce +1 Lore.png\n          Lore while not healing.\n        </ListItem>\n        <ListItem>Each additional territory gives +2 max population</ListItem>\n        <ListItem>No Happiness penalties for non-upgraded houses</ListItem>\n      </UnorderedList>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Fame Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>\n          200 Fame (Heritage): 1 free Lore (doesn't count towards Lore Victory\n          or Blessings)\n        </ListItem>\n        <ListItem>\n          500 Fame (Greater Blessings):\n          <UnorderedList>\n            <ListItem>\n              ~Freya: Blizzard Penalty is hugely reduced (50%)\n            </ListItem>\n            <ListItem>~ Baldr: +5 Happiness</ListItem>\n            <ListItem>\n              ~Jord: Warchief and upgraded tower get +10% Attack\n            </ListItem>\n          </UnorderedList>\n        </ListItem>\n      </UnorderedList>\n    </Box>\n  );\n};\n\nexport default BoarClan;\n","import { Divider, ListItem, Box, UnorderedList, Text } from '@chakra-ui/react';\nimport { Heading } from '@chakra-ui/react';\n\nconst GoatClan = () => {\n  return (\n    <Box maxW=\"400px\">\n      <Heading mb={3}>Clan of the Goat</Heading>\n      <Text>\n        The Clan of the Goat. When it comes to surviving in the dangerous\n        conditions and building sturdy settlements, the Clan of the Goat has no\n        rival. They will endure the harshest of winters and even prosper. Self\n        sufficient survivalists, they work hard to make the most of every inch\n        of their territory. Adaptable and resilient, they will be right at home\n        on Northgard.\n      </Text>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Starting Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>Start with 1 Sheep and can build the Sheepfold</ListItem>\n        <ListItem>Increases production of bonus of Feasts to 30%</ListItem>\n      </UnorderedList>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Fame Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>\n          200 Fame (Spare Tools): You gain 2 free tools to increase villagers'\n          productivity\n        </ListItem>\n        <ListItem>\n          500 Fame (Team Work): Defense Towers and all Military units gain 20%\n          resistance when feasting. You get 1 free Feast\n        </ListItem>\n      </UnorderedList>\n    </Box>\n  );\n};\n\nexport default GoatClan;\n","import { Divider, ListItem, Box, UnorderedList, Text } from '@chakra-ui/react';\nimport { Heading } from '@chakra-ui/react';\n\nconst RavenClan = () => {\n  return (\n    <Box maxW=\"400px\">\n      <Heading mb={3}>Clan of the Raven</Heading>\n      <Text>\n        The Clan of the Raven. Great explorers and merchants, their mighty fleet\n        allowed them to be the first to land on Northgard. They are strong trade\n        partners if you don't mind their constant scheming. Brash and swift,\n        they will often be found roaming where you least expect them.{' '}\n      </Text>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Starting Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>Can colonize with Kröwns rather than Food</ListItem>\n        <ListItem>\n          Can build a Harbor (replaces Longship Dock) to explore coastal areas\n          and later send mercenaries to attack\n        </ListItem>\n      </UnorderedList>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Fame Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>\n          200 Fame (Recruits): Obtain +3 Villagers, 3 max population and +1\n          Happiness{' '}\n        </ListItem>\n        <ListItem>\n          500 Fame (Mercenaries): You can hire Mercenaries at your Harbor and\n          send them to raid coastal areas{' '}\n        </ListItem>\n      </UnorderedList>\n    </Box>\n  );\n};\n\nexport default RavenClan;\n","import { Divider, ListItem, Box, UnorderedList, Text } from '@chakra-ui/react';\nimport { Heading } from '@chakra-ui/react';\n\nconst StagClan = () => {\n  return (\n    <Box maxW=\"400px\">\n      <Heading mb={3}>Clan of the Stag</Heading>\n      <Text>\n        The clan of the Stag. Proud of their legacy of astonishing achievements,\n        they are renowned as much for their honorable and regal manner as their\n        harsh justice and unyielding strength. Valuing wealth and fame, they are\n        highly ambitions expansionists ...\n      </Text>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Starting Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>Start with +75 Food, Wood and Kröwns</ListItem>\n        <ListItem>\n          Hall of Skalds replaces Brewery and provides additional Fame\n        </ListItem>\n      </UnorderedList>\n      <Divider mb={3} mt={3} />\n      <Heading mb={3}>Fame Bonuses</Heading>\n      <UnorderedList>\n        <ListItem>\n          200 Fame (Supplies): Gain +150 Food, Wood and Kröwns, and +10 Stone\n        </ListItem>\n        <ListItem>\n          500 Fame (Dedication): Upgraded buildings gain additional 10%\n          production bonus\n        </ListItem>\n      </UnorderedList>\n    </Box>\n  );\n};\n\nexport default StagClan;\n","import React from 'react';\nimport {\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Flex,\n  Box,\n  Image,\n} from '@chakra-ui/react';\nimport Wolf from './images/Wolf_round.png';\nimport Bear from './images/Bear_78x78.png';\nimport Boar from './images/Boar_78x78.png';\nimport Goat from './images/Goat_78x78.png';\nimport Raven from './images/Raven_78x78.png';\nimport Stag from './images/Stag_78x78.png';\nimport WolfClan from './clan-pages/wolf.js';\nimport BearClan from './clan-pages/bear.js';\nimport BoarClan from './clan-pages/boar.js';\nimport GoatClan from './clan-pages/goat.js';\nimport RavenClan from './clan-pages/raven.js';\nimport StagClan from './clan-pages/stag.js';\nimport { Text } from '@chakra-ui/react';\n\nclass TestMenu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [\n        { id: 1, title: 'Wolf', image: Wolf, page: <WolfClan /> },\n        { id: 2, title: 'Bear', image: Bear, page: <BearClan /> },\n        { id: 3, title: 'Boar', image: Boar, page: <BoarClan /> },\n        { id: 4, title: 'Goat', image: Goat, page: <GoatClan /> },\n        { id: 5, title: 'Raven', image: Raven, page: <RavenClan /> },\n        { id: 6, title: 'Stag', image: Stag, page: <StagClan /> },\n      ],\n    };\n  }\n  render() {\n    let items = this.state.items;\n    return (\n      <div>\n        <Tabs orientation=\"horizontal\" isFitted=\"true\" w=\"100%\">\n          <TabList id=\"clansList\">\n            {items.map(item => (\n              <Tab key={item.id}>\n                <Flex>\n                  <Box>\n                    <Image src={item.image} boxSize=\"50px\" align=\"left\" />\n                    <Text fontSize=\"xl\" align=\"center\">\n                      {item.title}\n                    </Text>\n                  </Box>\n                </Flex>\n              </Tab>\n            ))}\n          </TabList>\n          <TabPanels>\n            {items.map(item => (\n              <TabPanel key={item.id}>{item.page}</TabPanel>\n            ))}\n          </TabPanels>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default TestMenu;\n","import React from 'react';\nimport { Input } from '@chakra-ui/react';\n\nclass Faq extends React.Component {\n  constructor() {\n    super();\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    var input, filter, ul, li, a, i, txtValue;\n    input = document.getElementById('myInput');\n    filter = input.value.toUpperCase();\n    ul = document.getElementById('myUL');\n    li = ul.getElementsByTagName('li');\n\n    // Loop through all list items, and hide those who don't match the search query\n    for (i = 0; i < li.length; i++) {\n      a = li[i].getElementsByTagName('a')[0];\n      txtValue = a.textContent || a.innerText;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        li[i].style.display = '';\n      } else {\n        li[i].style.display = 'none';\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Input id=\"myInput\" placeholder=\"Search\" onKeyUp={this.handleClick} />\n        <ul id=\"myUL\">\n          <li>\n            <a href=\"#\">New text</a>\n          </li>\n          <li>\n            <a href=\"#\">Agnes</a>\n          </li>\n\n          <li>\n            <a href=\"#\">Billy</a>\n          </li>\n          <li>\n            <a href=\"#\">Bob</a>\n          </li>\n\n          <li>\n            <a href=\"#\">Calvin</a>\n          </li>\n          <li>\n            <a href=\"#\">Christina</a>\n          </li>\n          <li>\n            <a href=\"#\">Cindy</a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { ChakraProvider, theme } from '@chakra-ui/react';\nimport MainMenu from './components/mainMenu';\nimport MobileMenu from './components/mobileMenu';\nimport MainHeader from './components/header';\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport TestMenu from './components/clansMenu';\nimport Faq from './components/faq';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <ChakraProvider theme={theme}>\n        <MainHeader />\n        <div>\n          <MainMenu />\n          <MobileMenu />\n\n          <hr />\n\n          <Route exact path=\"/\" />\n          <Route exact path=\"/clans\" component={TestMenu} />\n          <Route exact path=\"/faq\" component={Faq} />\n        </div>\n      </ChakraProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}